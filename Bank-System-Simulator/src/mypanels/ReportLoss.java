/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mypanels;


import com.mysql.jdbc.Connection;
import java.awt.Dialog;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Random;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import mybanksystem.MySqlConnect;


/**
 *
 * @author yangp
 */
public class ReportLoss extends javax.swing.JPanel {
     
    /**
     * Creates new form ReportLoss
     */
    public ReportLoss() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportlossPanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        queryPanel = new javax.swing.JPanel();
        cardNumL = new javax.swing.JLabel();
        cardNumTF = new javax.swing.JTextField();
        queryButn = new javax.swing.JButton();
        resultPanel = new javax.swing.JPanel();
        accountNumL = new javax.swing.JLabel();
        accountTypeTF = new javax.swing.JTextField();
        accountNameL = new javax.swing.JLabel();
        accountNameTF = new javax.swing.JTextField();
        phoneNumL = new javax.swing.JLabel();
        phoneNumTF = new javax.swing.JTextField();
        adressL = new javax.swing.JLabel();
        addressTF = new javax.swing.JTextField();
        idTypeL = new javax.swing.JLabel();
        idTypeTF = new javax.swing.JTextField();
        idNumL = new javax.swing.JLabel();
        idNumTF = new javax.swing.JTextField();
        accountTypeL = new javax.swing.JLabel();
        accountNumTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        acctStatusTF = new javax.swing.JTextField();
        authorizeButn = new javax.swing.JButton();
        backButn = new javax.swing.JButton();
        enterButn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(554, 530));

        reportlossPanel.setBackground(new java.awt.Color(255, 255, 255));
        reportlossPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        reportlossPanel.setLayout(null);

        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setText("Report  for Loss");
        reportlossPanel.add(title);
        title.setBounds(170, 20, 210, 40);

        queryPanel.setBackground(new java.awt.Color(255, 255, 255));
        queryPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        queryPanel.setLayout(null);

        cardNumL.setText("Card Num:");
        queryPanel.add(cardNumL);
        cardNumL.setBounds(20, 30, 110, 20);
        queryPanel.add(cardNumTF);
        cardNumTF.setBounds(160, 30, 270, 26);

        queryButn.setText("Search");
        queryButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryButnActionPerformed(evt);
            }
        });
        queryPanel.add(queryButn);
        queryButn.setBounds(340, 70, 100, 29);

        reportlossPanel.add(queryPanel);
        queryPanel.setBounds(30, 70, 490, 110);

        resultPanel.setBackground(new java.awt.Color(255, 255, 255));
        resultPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));

        accountNumL.setText("Account Num:");

        accountTypeTF.setEnabled(false);

        accountNameL.setText("Acctount Name:");

        accountNameTF.setEnabled(false);

        phoneNumL.setText("Phone Num:");

        phoneNumTF.setEnabled(false);

        adressL.setText("Address:");

        addressTF.setEnabled(false);

        idTypeL.setText("ID Type:");

        idTypeTF.setEnabled(false);

        idNumL.setText("ID Num:");

        idNumTF.setEnabled(false);

        accountTypeL.setText("Account Type:");

        accountNumTF.setEnabled(false);

        jLabel1.setText("Account Status:");

        acctStatusTF.setEnabled(false);

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addComponent(idTypeL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(idTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addComponent(adressL, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addressTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addComponent(phoneNumL, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(phoneNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addComponent(accountNameL, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(accountNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(accountNumL, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accountTypeL, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(accountTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accountNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultPanelLayout.createSequentialGroup()
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idNumL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idNumTF, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                            .addComponent(acctStatusTF))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(accountNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(accountTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addComponent(accountNumL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(accountTypeL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountNameL)
                    .addComponent(accountNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneNumL)
                    .addComponent(phoneNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adressL)
                    .addComponent(addressTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idTypeL)
                    .addComponent(idTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idNumL)
                    .addComponent(idNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(acctStatusTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        reportlossPanel.add(resultPanel);
        resultPanel.setBounds(30, 180, 490, 320);

        authorizeButn.setText("Authorize");
        authorizeButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorizeButnActionPerformed(evt);
            }
        });
        reportlossPanel.add(authorizeButn);
        authorizeButn.setBounds(300, 510, 100, 40);

        backButn.setText("Cancel");
        backButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButnActionPerformed(evt);
            }
        });
        reportlossPanel.add(backButn);
        backButn.setBounds(180, 510, 90, 40);

        enterButn.setText("Enter");
        enterButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButnActionPerformed(evt);
            }
        });
        reportlossPanel.add(enterButn);
        enterButn.setBounds(430, 510, 90, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(reportlossPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(reportlossPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void authorizeButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorizeButnActionPerformed
        
       DialogPanel  dpanel = new DialogPanel();    
       JOptionPane.showConfirmDialog(null,dpanel,"Authorize Transaction", JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE);
      
       String idname= String.valueOf(dpanel.getID().getSelectedItem());
       String id = idname.substring(0, 10);
       String password = dpanel.getPassword().getText();
        try{
            Connection con = MySqlConnect.ConnectDB(); 
            String query = "select * from tellerinfo where tellID = ? and password = ?";
                          
            PreparedStatement st = con.prepareStatement(query);
            st.setString(1, id);
            st.setString(2, password);
            ResultSet result  = st.executeQuery();
            if(result.next()){
                enterButn.setEnabled(true);
                authorizeButn.setEnabled(false);
            }else{
                JOptionPane.showMessageDialog(null, "ID and Password do NOT matched!");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }  
    }//GEN-LAST:event_authorizeButnActionPerformed

    private void enterButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButnActionPerformed
        String flownum = getflowNum();
        try{
            Connection con = MySqlConnect.ConnectDB(); 
            String query = "update acctinfo set acctStatus = \"Hold\",lossFlowNum = ?  where cardNo = ?";
                          
            PreparedStatement st = con.prepareStatement(query);
            st.setString(1, flownum);
            st.setString(2, cardNumTF.getText());
         
            int result  = st.executeUpdate();
            if(result>0){
                 JOptionPane.showMessageDialog(null, "Transaction is successful!");
                 reportlossPanel.setVisible(false);
                
            }else{
                JOptionPane.showMessageDialog(null, "ID and Password do NOT matched!");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }  
    }//GEN-LAST:event_enterButnActionPerformed

    private void queryButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryButnActionPerformed
        try{
            Connection con = MySqlConnect.ConnectDB(); 
            String query = "select acctNo,acctName,acctType,acctStatus, applicantIDType,applicantIDNum,applicantPhone,applicantAddress from acctinfo\n" +
                            " where cardNo = ? ";
            PreparedStatement st = con.prepareStatement(query);
            st.setString(1, cardNumTF.getText());
            ResultSet result  = st.executeQuery();
          
            if(result.next() ){
                accountNumTF.setText(result.getString("acctNo"));
                accountTypeTF.setText(result.getString("acctType"));
                accountNameTF.setText(result.getString("acctName"));
                phoneNumTF.setText(result.getString("applicantPhone"));
                addressTF.setText(result.getString("applicantAddress"));
                idTypeTF.setText(result.getString("applicantIDType"));
                idNumTF.setText(result.getString("applicantIDNum"));
                acctStatusTF.setText(result.getString("acctStatus"));
                
            }
            else{
                 JOptionPane.showMessageDialog(null, "There is no eligible record, please check!!");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Research failed! \n " + e);
        }
        if(acctStatusTF.getText().equals("Hold")){
            JOptionPane.showMessageDialog(null, "This card has already been reported!!");
            
        }
        enterButn.setEnabled(false);
       
        
    }//GEN-LAST:event_queryButnActionPerformed

    private void backButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButnActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_backButnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountNameL;
    private javax.swing.JTextField accountNameTF;
    private javax.swing.JLabel accountNumL;
    private javax.swing.JTextField accountNumTF;
    private javax.swing.JLabel accountTypeL;
    private javax.swing.JTextField accountTypeTF;
    private javax.swing.JTextField acctStatusTF;
    private javax.swing.JTextField addressTF;
    private javax.swing.JLabel adressL;
    private javax.swing.JButton authorizeButn;
    private javax.swing.JButton backButn;
    private javax.swing.JLabel cardNumL;
    private javax.swing.JTextField cardNumTF;
    private javax.swing.JButton enterButn;
    private javax.swing.JLabel idNumL;
    private javax.swing.JTextField idNumTF;
    private javax.swing.JLabel idTypeL;
    private javax.swing.JTextField idTypeTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel phoneNumL;
    private javax.swing.JTextField phoneNumTF;
    private javax.swing.JButton queryButn;
    private javax.swing.JPanel queryPanel;
    private javax.swing.JPanel reportlossPanel;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
    public javax.swing.JPanel getmainpanel(){
        return this.reportlossPanel;
    }
    
    public String getflowNum(){
        String result = null;
        String time = new SimpleDateFormat("HHmmss").format(Calendar.getInstance().getTime());
        String date = new SimpleDateFormat("yyMMdd").format(Calendar.getInstance().getTime());
        Random random = new Random();
        
        String num = String.valueOf(random.nextInt(1000));
        result = date + time + num;
        
        
        return result;
    }
   

}
