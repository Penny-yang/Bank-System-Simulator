/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mypanels;

import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.NumberFormat;
import javax.swing.JOptionPane;
import mybanksystem.MySqlConnect;

/**
 *
 * @author yangp
 */
public class Withdraw extends javax.swing.JPanel {

    /**
     * Creates new form Withdraw
     */
    public Withdraw() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        withdrawPanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        queryPanel = new javax.swing.JPanel();
        cardNumL = new javax.swing.JLabel();
        cardNumTF = new javax.swing.JTextField();
        queryButn = new javax.swing.JButton();
        resultPanel = new javax.swing.JPanel();
        accountTypeL = new javax.swing.JLabel();
        accountTypeTF = new javax.swing.JTextField();
        accountNameL = new javax.swing.JLabel();
        accountNameTF = new javax.swing.JTextField();
        idTypeL = new javax.swing.JLabel();
        idTypeTF = new javax.swing.JTextField();
        idNumL = new javax.swing.JLabel();
        idNumTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        balanceTF = new javax.swing.JTextField();
        amtTF = new javax.swing.JTextField();
        balanceNew = new javax.swing.JTextField();
        currencyTF = new javax.swing.JTextField();
        currencyNB = new javax.swing.JTextField();
        tranCurrencyCB = new javax.swing.JComboBox<>();
        accountNumTF = new javax.swing.JTextField();
        acctNumL = new javax.swing.JLabel();
        backButn = new javax.swing.JButton();
        enterButn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        withdrawPanel.setBackground(new java.awt.Color(255, 255, 255));
        withdrawPanel.setLayout(null);

        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setText("Cash Withdraw");
        withdrawPanel.add(title);
        title.setBounds(170, 20, 210, 40);

        queryPanel.setBackground(new java.awt.Color(255, 255, 255));
        queryPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        queryPanel.setLayout(null);

        cardNumL.setText("Card Num:");
        queryPanel.add(cardNumL);
        cardNumL.setBounds(40, 20, 110, 20);
        queryPanel.add(cardNumTF);
        cardNumTF.setBounds(170, 20, 270, 26);

        queryButn.setText("Search");
        queryButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryButnActionPerformed(evt);
            }
        });
        queryPanel.add(queryButn);
        queryButn.setBounds(340, 60, 100, 29);

        withdrawPanel.add(queryPanel);
        queryPanel.setBounds(30, 70, 490, 100);

        resultPanel.setBackground(new java.awt.Color(255, 255, 255));
        resultPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));
        resultPanel.setEnabled(false);

        accountTypeL.setText("Account Type:");

        accountTypeTF.setEnabled(false);

        accountNameL.setText("Acctount Name:");

        accountNameTF.setEnabled(false);

        idTypeL.setText("ID Type:");

        idTypeTF.setEnabled(false);

        idNumL.setText("ID Num:");

        idNumTF.setEnabled(false);

        jLabel1.setText("Account Balance:");

        jLabel2.setText("Transaction Amt:");

        jLabel3.setText("New Balanceï¼š");

        balanceTF.setEnabled(false);

        balanceNew.setEnabled(false);
        balanceNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                balanceNewMouseClicked(evt);
            }
        });
        balanceNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceNewActionPerformed(evt);
            }
        });

        currencyTF.setEnabled(false);

        currencyNB.setEnabled(false);

        tranCurrencyCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "RMB", "" }));

        accountNumTF.setEnabled(false);

        acctNumL.setText("Account Num:");

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addComponent(idTypeL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(idTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addComponent(accountNameL, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(accountNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultPanelLayout.createSequentialGroup()
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(resultPanelLayout.createSequentialGroup()
                                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idNumL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(resultPanelLayout.createSequentialGroup()
                                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(balanceNew, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .addComponent(amtTF, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(balanceTF, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(currencyTF)
                                    .addComponent(currencyNB)
                                    .addComponent(tranCurrencyCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(accountTypeL, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acctNumL, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(accountNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accountTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acctNumL))
                .addGap(15, 15, 15)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountTypeL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountNameL)
                    .addComponent(accountNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idTypeL)
                    .addComponent(idTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idNumL))
                .addGap(18, 18, 18)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(balanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currencyTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(amtTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tranCurrencyCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(balanceNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currencyNB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        withdrawPanel.add(resultPanel);
        resultPanel.setBounds(30, 170, 490, 350);

        backButn.setText("Cancel");
        backButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButnActionPerformed(evt);
            }
        });
        withdrawPanel.add(backButn);
        backButn.setBounds(280, 530, 90, 30);

        enterButn.setText("Enter");
        enterButn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButnActionPerformed(evt);
            }
        });
        enterButn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                enterButnKeyTyped(evt);
            }
        });
        withdrawPanel.add(enterButn);
        enterButn.setBounds(420, 530, 93, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(withdrawPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(withdrawPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButnActionPerformed
      //  canlscreen.setEnableRec(canlscreen.getmainpanel(),true);
        this.setVisible(false);
    }//GEN-LAST:event_backButnActionPerformed

    private void enterButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButnActionPerformed
            try{
           
                Connection con = MySqlConnect.ConnectDB(); 
                String query = "update acctinfo set balance = ?  where cardNo = ? ";
                PreparedStatement st = con.prepareStatement(query);
                st.setString(1,balanceNew.getText());
                st.setString(2,cardNumTF.getText());
                int result  = st.executeUpdate();
          
                if(result > 0 ){
                     JOptionPane.showMessageDialog(null, "Transaction is successful !!");
                        this.setVisible(false);
                
                }else{
                        JOptionPane.showMessageDialog(null, "Transaction Failed !!");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Research failed! \n " + e);
        }

    }//GEN-LAST:event_enterButnActionPerformed

    private void queryButnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryButnActionPerformed
       
        try{
            Connection con = MySqlConnect.ConnectDB(); 
            String query = "select * from acctinfo where cardNo = ?" ;
                          
            PreparedStatement st = con.prepareStatement(query);
            st.setString(1, cardNumTF.getText());         
            ResultSet result  = st.executeQuery();
          
            if(result.next() ){
                accountNumTF.setText(result.getString("acctNo"));
                accountTypeTF.setText(result.getString("acctType"));
                accountNameTF.setText(result.getString("acctName"));
                idTypeTF.setText(result.getString("applicantIDType"));
                balanceTF.setText(result.getString("balance"));                
                idNumTF.setText(result.getString("applicantIDNum"));
                currencyTF.setText(result.getString("currency"));  
                
            }
            else{
                 JOptionPane.showMessageDialog(null, "There is no eligible record, please check!!");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Research failed! \n " + e);
        }
        
        
    }//GEN-LAST:event_queryButnActionPerformed

    private void enterButnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enterButnKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_enterButnKeyTyped

    private void balanceNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceNewActionPerformed
 
    }//GEN-LAST:event_balanceNewActionPerformed

    private void balanceNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_balanceNewMouseClicked
        if((tranCurrencyCB.getSelectedItem().toString()).equals("USD") &&(currencyTF.getText()).equals("USD")){
            double money = Double.parseDouble(balanceTF.getText())- Double.parseDouble(amtTF.getText());
            NumberFormat moneyFormatter = NumberFormat.getCurrencyInstance();
            moneyFormatter.format(money);
            String k = moneyFormatter.format(money).toString();
            balanceNew.setText(k.substring(1));    
           
            currencyNB.setText("USD");
        }
    }//GEN-LAST:event_balanceNewMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountNameL;
    private javax.swing.JTextField accountNameTF;
    private javax.swing.JTextField accountNumTF;
    private javax.swing.JLabel accountTypeL;
    private javax.swing.JTextField accountTypeTF;
    private javax.swing.JLabel acctNumL;
    private javax.swing.JTextField amtTF;
    private javax.swing.JButton backButn;
    private javax.swing.JTextField balanceNew;
    private javax.swing.JTextField balanceTF;
    private javax.swing.JLabel cardNumL;
    private javax.swing.JTextField cardNumTF;
    private javax.swing.JTextField currencyNB;
    private javax.swing.JTextField currencyTF;
    private javax.swing.JButton enterButn;
    private javax.swing.JLabel idNumL;
    private javax.swing.JTextField idNumTF;
    private javax.swing.JLabel idTypeL;
    private javax.swing.JTextField idTypeTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton queryButn;
    private javax.swing.JPanel queryPanel;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JLabel title;
    private javax.swing.JComboBox<String> tranCurrencyCB;
    private javax.swing.JPanel withdrawPanel;
    // End of variables declaration//GEN-END:variables

    public javax.swing.JPanel getmainpanel(){
        return this.withdrawPanel;
        
    }
          

}
//                    if((tranCurrencyCB.getSelectedItem().toString()).equals("USD") &&(currencyTF.getText()).equals("USD")){
//            double money = Double.parseDouble(balanceTF.getText())- Double.parseDouble(amtTF.getText());
//            balanceNew.setText(String.valueOf(money));    
//           
//            currencyNB.setText("USD");
//        }
